extends layout.pug

block content
    h1= vote.title
    h3= vote.desc
    ul(data-voteid = vote.id)#option-list
        each option in options
            li(data-optionid=option.id)= option.content
                span
    script(src="/socket.io/socket.io.js")
    script.
        // 关于/socket.io/socket.io.js 是如何引入的  static并没有这个文件
        // 原因: 因为我们把server 传给了 socketIO模块  给server绑定了一个request事件
        // 但是只是在请求/socket.io/socket.io.js的时候触发

        var optionList = document.querySelector('#option-list');

        function updateState(voteResult){
            var counted = _.countBy(voteResult, 'optionid')
            // 避免出现没有1票到0票产生的bug所以需要每次都初始化一下
            var options = Array.from(document.querySelectorAll('[data-optionid]'));
            options.forEach(item=>{
                item.lastChild.textContent = '/0票';
            })
            _.forEach(counted, (val, key)=>{
                document.querySelector(`[data-optionid="${key}"]`).lastChild.textContent = '/' + val + '票';
            })
        }

        async function main(){
            var voteResult = (await axios.get(`/voteup/${optionList.dataset.voteid}/info`)).data;
            if(voteResult == null){
                voteResult = [];
            }
        // 功能需求 需要实时更新票数    浏览器主动更新 发送请求
        // 轮询的做法  每隔一段时间  网页就对服务器发送请求
        // 长轮询  在没有给消息时就不响应  在给到消息的瞬间进行响应
            var socket = io();

            socket.emit('select room', location.pathname.split('/').pop())

            socket.on('new vote', data=>{
                // 没有对票进行验证 实际数据库中并没有那么多票
                voteResult.push(data);
                updateState(voteResult)
            })
            if(voteResult.length > 0){
                updateState(voteResult);
            }
        }

        main();

        optionList.addEventListener('click',async e=>{
            // 由于点击时会点到span元素 所以进行处理
            if(e.target.tagName == 'SPAN'){
                var check = e.target.parentNode;
            }else{
                var check = e.target;
            }

            var optionid = check.dataset.optionid;

            var voteResult  = (await axios.post('/voteup', {
                voteid: optionList.dataset.voteid,
                optionid : optionid,
            })).data;

            main()
        })



