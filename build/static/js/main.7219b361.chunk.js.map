{"version":3,"sources":["hooks/login.js","hooks/register.js","hooks/createVote.js","hooks/voteView.js","hooks/main.js","hooks/forgot.js","hooks/changepassword.js","App.js","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","withCredentials","LoginPage","history","useHistory","useState","Date","now","image","setImage","style","backgroundColor","className","onBack","push","pathname","title","name","initialValues","remember","onFinish","values","data","a","post","username","password","captcha","request","code","alert","msg","login","Item","rules","required","message","prefix","UserOutlined","placeholder","LockOutlined","type","label","extra","gutter","span","noStyle","onClick","marginTop","paddingLeft","src","alt","valuePropName","to","htmlType","formItemLayout","labelCol","xs","sm","wrapperCol","tailFormItemLayout","offset","normFile","e","Array","isArray","fileList","RegisterPage","formData","FormData","append","email","avatar","originFileObj","console","log","method","url","headers","useRef","Form","useForm","form","register","scrollToFirstError","QuestionCircleOutlined","marginBottom","whitespace","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","getValueFromEvent","listType","icon","UploadOutlined","CreateVote","useEffect","get","getUserInfo","layout","subTitle","padding","desc","options","deadline","anonymouse","singleSelection","id","error","onFinishFailed","errorInfo","size","fields","showToday","Group","Button","List","add","remove","map","field","index","key","validateTrigger","width","length","MinusCircleOutlined","margin","PlusOutlined","resetFields","IconFont","createFromIconfontCN","scriptUrl","VoteView","params","useParams","isLoading","setIsLoading","voteup","setVoteup","voteInfo","setVoteInfo","setOptions","info","socket","io","emit","on","getVoteup","useVoteup","isShow","setIsShow","isLogin","setIsLogin","myVote","setMyVote","userInfo","setUserInfo","votedata","user","hasVoted","useHasVoted","optionid","voteid","status","handlerShowing","optionticketPrecent","count","filter","it","Math","round","Modal","content","onOk","tip","description","fontSize","color","option","Vote","some","userid","CheckOutlined","percent","strokeColor","from","item","moment","format","DemoBox","props","children","itemRender","current","originalElement","Main","setUser","useUserInfo","voteList","setVoteList","voteNum","setVoteNum","votelist","num","getVotelist","getVotelistNum","useVoteList","page","pageSize","orientation","justify","align","shape","marginLeft","itemLayout","dataSource","renderItem","Meta","fromNow","total","defaultCurrent","defaultPageSize","showLessItems","onChange","Forgot","sendForgotRequest","ChangePassword","token","changeRequest","_","href","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.7219b361.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './common.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { PageHeader , Row , Col,} from 'antd';\r\nimport {\r\n    Link,\r\n  } from \"react-router-dom\";\r\n\r\nconst api = axios.create({\r\n    baseURL: '/',\r\n    withCredentials: true,\r\n})\r\n\r\nfunction LoginPage(){\r\n    let history = useHistory();\r\n    const [image, setImage] = useState(Date.now())\r\n\r\n    const onFinish = values => {\r\n        async function login(data){\r\n            var request = await api.post('/login', {\r\n                name: data.username,\r\n                password: data.password,\r\n                captcha: data.captcha,\r\n            })\r\n            var result = request.data;\r\n            if(result.code === -1 ){\r\n                alert(data.msg);\r\n            }else{\r\n                // 账号密码都正确 页面应该由前端路由跳转\r\n                history.push({\r\n                    pathname: '/'\r\n                })\r\n            }\r\n        }\r\n        login(values)\r\n    };\r\n\r\n    return (\r\n        <div style = {{backgroundColor: '#F8F8FF'}}>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => {\r\n                    history.push({\r\n                        pathname: '/' \r\n                    })\r\n                }}\r\n                title=\"Login\"\r\n            />\r\n            <div className = 'container'>\r\n                <Form\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                >\r\n                    <Form.Item\r\n                        name=\"username\"\r\n                        rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                    >\r\n                        <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                    >\r\n                        <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                        <Row gutter={8}>\r\n                        <Col span={6}>\r\n                            <Form.Item\r\n                            name=\"captcha\"\r\n                            noStyle\r\n                            rules={[{ required: true, message: 'Please input the captcha you got!' }]}\r\n                            >\r\n                            <Input />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick = {() => setImage(Date.now())  }>Get captcha</Button>\r\n                        </Col>\r\n                        <Col span={10} style = { {marginTop: '-10px', paddingLeft: '18px'} }>\r\n                            <img src = {'/captcha?' + image } alt = '验证码显示错误'/>\r\n                        </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n\r\n\r\n                    <Form.Item>\r\n                        <Form.Item name=\"remember\" valuePropName=\"checked\" noStyle>\r\n                        <Checkbox>Remember me</Checkbox>\r\n                        </Form.Item>\r\n\r\n                        <Link className=\"login-form-forgot\" to=\"/forgot\">\r\n                        Forgot password\r\n                        </Link>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                        </Button>\r\n                        &nbsp;&nbsp;Or <Link to=\"/register\">register now!</Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default LoginPage","import React, {useState, useRef} from 'react';\r\nimport axios from 'axios';\r\nimport './common.css'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Tooltip,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    Upload,\r\n    PageHeader\r\n  } from 'antd';\r\nimport { QuestionCircleOutlined ,  UploadOutlined } from '@ant-design/icons';\r\nimport {\r\n    Link,\r\n    useHistory,\r\n  } from \"react-router-dom\";\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n        span: 24,\r\n        },\r\n        sm: {\r\n        span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n        span: 24,\r\n        },\r\n        sm: {\r\n        span: 16,\r\n        },\r\n    },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n        span: 24,\r\n        offset: 0,\r\n        },\r\n        sm: {\r\n        span: 16,\r\n        offset: 8,\r\n        },\r\n    },\r\n};\r\n\r\nconst normFile = e => {\r\n    if (Array.isArray(e)) {\r\n        return e;\r\n    }\r\n    return e && e.fileList;\r\n};\r\n\r\nconst customRequest = async function(a){\r\n    console.log(a);\r\n}\r\n\r\nfunction RegisterPage(){\r\n    let history = useHistory();\r\n    const fileRef = useRef();\r\n\r\n    async function register(data){\r\n        var formData = new FormData();\r\n        formData.append('name', data.name)\r\n        formData.append('password', data.password)\r\n        formData.append('email', data.email)\r\n        formData.append('captcha', data.captcha)\r\n        formData.append('avatar', data.avatar[0].originFileObj)\r\n\r\n        console.log(data)\r\n        var request = await axios({\r\n            method: 'post',\r\n            url: '/register',\r\n            data: formData,\r\n            withCredentials: true,\r\n        },{headers: {'Content-Type': 'multipart/form-data'}})\r\n        if(request.data.code === -1){\r\n            // 注册失败\r\n            \r\n        }else{\r\n            // 注册成功  由前端路由跳转到登录页面或者 主页面\r\n            history.push({\r\n                pathname: '/login'\r\n            })\r\n        }\r\n    }\r\n    const [form] = Form.useForm();\r\n    const onFinish = values => {\r\n        register(values);\r\n    };\r\n    const [image, setImage] = useState(Date.now())\r\n    return (\r\n        <div style = {{backgroundColor: '#F8F8FF'}}>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => {\r\n                    history.push({\r\n                        pathname: '/' \r\n                    })\r\n                }}\r\n                title=\"Register\"\r\n            />\r\n            <div className = 'container'>\r\n                <Form\r\n                {...formItemLayout}\r\n                form={form}\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"name\"\r\n                        label={\r\n                        <span>\r\n                            Username&nbsp;\r\n                            <Tooltip title=\"What do you want others to call you? and you can use it to login\">\r\n                            <QuestionCircleOutlined />\r\n                            </Tooltip>\r\n                        </span>\r\n                        }\r\n                        style = {{marginBottom: '0'}}\r\n                        rules={[{ required: true, message: 'Please input your nickname!', whitespace: true }]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                        {\r\n                            type: 'email',\r\n                            message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your E-mail!',\r\n                        },\r\n                        ]}\r\n                        style = {{marginBottom: '0'}}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },]}\r\n                        hasFeedback\r\n                        style = {{marginBottom: '0'}}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        style = {{marginBottom: '0'}}\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                            },\r\n                        }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n\r\n\r\n                    <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\" style = {{marginBottom: '0'}}>\r\n                        <Row gutter={8}>\r\n                        <Col span={6}>\r\n                            <Form.Item\r\n                            name=\"captcha\"\r\n                            noStyle\r\n                            rules={[{ required: true, message: 'Please input the captcha you got!' }]}\r\n                            >\r\n                            <Input />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick = {() => setImage(Date.now())  }>Get captcha</Button>\r\n                        </Col>\r\n                        <Col span={10} style = { {marginTop: '-10px', paddingLeft: '18px'} }>\r\n                            <img src = { '/captcha?' + image } alt = '验证码显示错误'/>\r\n                        </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"avatar\"\r\n                        label=\"Avatar\"\r\n                        valuePropName=\"fileList\"\r\n                        getValueFromEvent={normFile}\r\n                        style = {{marginBottom: '0'}}\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: '上传一个头像',\r\n                        },]}\r\n                    >\r\n                        <Upload name=\"logo\"  listType=\"picture\"  >\r\n                        <Button icon={<UploadOutlined />}>上传你的头像</Button>\r\n                        </Upload>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailFormItemLayout} style = {{marginBottom: '0'}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                        </Button>\r\n                        <Link to=\"/login\">&nbsp;&nbsp;Or login now!</Link>\r\n                    </Form.Item>\r\n                </Form>\r\n            \r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default RegisterPage","import React from 'react';\r\nimport {useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport './common.css'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    Radio,\r\n    DatePicker,\r\n    PageHeader,\r\n    message\r\n  } from 'antd';\r\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\n\r\nconst api = axios.create({\r\n    baseURL: '/',\r\n    withCredentials: true,\r\n})\r\n\r\nconst error = () => {\r\n  message.error('请选择一个将来的时间作为投票截止时间');\r\n};\r\n\r\nfunction CreateVote(){\r\n    const [form] = Form.useForm();\r\n    const history = useHistory();\r\n\r\n    // 确定用户是否登录 如果没有登录就跳转\r\n    useEffect( () => {\r\n        async function getUserInfo(){\r\n            var request = await api.get('/userinfo')\r\n            if(request.data.code === -1){\r\n                history.push({\r\n                    pathname: '/login',\r\n                })\r\n            }\r\n        }\r\n        getUserInfo();\r\n        \r\n    }, [])\r\n\r\n    const onFinish = values => {\r\n        console.log('Success:', values);\r\n\r\n        if(values.deadline < Date.now()){\r\n            // 弹出提示\r\n            error();\r\n            return ;\r\n        }\r\n\r\n        // 发送请求事件\r\n        async function create(data){\r\n            var request = await api.post('/create',{\r\n                title: data.title,\r\n                desc: data.desc,\r\n                options: data.options,\r\n                deadline: data.deadline,\r\n                anonymouse: data.anonymouse,\r\n                singleSelection: data.singleSelection,\r\n            })\r\n            if(request.code === -1){\r\n                alert(request.msg)\r\n            }else{\r\n                // 通过前端路由跳转创建的投票页面\r\n                history.push({\r\n                    pathname: '/vote-view/' + request.data.id\r\n                })\r\n            }\r\n\r\n        }\r\n        create(values)\r\n\r\n      };\r\n    \r\n    const onFinishFailed = errorInfo => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n    const layout = {\r\n        labelCol: { span: 8 },\r\n        wrapperCol: { span: 16 } ,\r\n    };\r\n\r\n    const onReset = () => {\r\n        form.resetFields();\r\n      };\r\n\r\n    const fields = [\r\n        {\r\n          \"touched\": true,\r\n          \"validating\": false,\r\n          \"errors\": [],\r\n          \"name\": [\r\n            \"options\"\r\n          ],\r\n          \"value\": [\" \", \" \"]\r\n        }\r\n    ]\r\n\r\n    return (\r\n        <div className = 'outside'>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => {\r\n                    history.push({\r\n                        pathname: '/' \r\n                    })\r\n                }}\r\n                title=\"Create\"\r\n                subTitle=\"发起你的投票\"\r\n            />\r\n            <div style = { {padding: '20px'}}>\r\n                <Form\r\n                {...layout}\r\n                form = { form }\r\n                initialValues={{ remember: true }}\r\n                onFinish={onFinish}\r\n                onFinishFailed={onFinishFailed}\r\n                size= 'middle'\r\n                fields={fields}\r\n                initialValues = {{\r\n                    anonymouse: '1',\r\n                    singleSelection: '1',\r\n                }}\r\n                >\r\n                    <Form.Item \r\n                    label=\"标题\" \r\n                    name = \"title\"\r\n                    rules={[{ required: true, message: '请输入标题!' }]}\r\n                    className = \"form-item\"\r\n                    style = {{marginBottom: '0'}}\r\n                    >\r\n                        <Input \r\n                        placeholder=\"标题\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item \r\n                    label=\"描述\" \r\n                    name = \"desc\"\r\n                    rules={[{ required: true, message: '请输入问题的大致描述' }]}\r\n                    style = {{marginBottom: '0'}}\r\n                    >\r\n                        <Input\r\n                        type=\"text\"\r\n                        placeholder=\"问题描述\"\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item \r\n                    label=\"截止日期\" \r\n                    name = \"deadline\"\r\n                    rules={[{ required: true, message: '必须输入截止日期!' }]}\r\n                    style = {{marginBottom: '0'}}\r\n                    >\r\n                        <DatePicker \r\n                        type=\"datetime-local\" \r\n                        placeholder=\"截止日期\" \r\n                        showToday\r\n                        />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item \r\n                    label=\"单选或多选\" \r\n                    name=\"singleSelection\"\r\n                    style = {{marginBottom: '0'}}>\r\n                        <Radio.Group>\r\n                        <Radio.Button value=\"1\" >单选</Radio.Button>\r\n                        <Radio.Button value=\"0\" >多选</Radio.Button>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"匿名投票\" name=\"anonymouse\" style = {{marginBottom: '0'}}>\r\n                        <Radio.Group>\r\n                        <Radio.Button  value=\"1\"  >允许</Radio.Button>\r\n                        <Radio.Button  value=\"0\" >不允许</Radio.Button>\r\n                        </Radio.Group>\r\n                    </Form.Item>\r\n\r\n                    <Form.List name=\"options\">\r\n                        {(fields, { add, remove }) => {\r\n                        return (\r\n                            <div>\r\n                            {fields.map((field, index) => (\r\n                                <Form.Item\r\n                                label={'选项' + (index + 1) }\r\n                                required={false}\r\n                                key={field.key}\r\n                                style = {{marginBottom: '0'}}\r\n                                >\r\n                                    <Form.Item\r\n                                        {...field}\r\n                                        validateTrigger={['onChange', 'onBlur']}\r\n                                        rules={[\r\n                                        {\r\n                                            required: true,\r\n                                            whitespace: true,\r\n                                            message: \"请输入你需要添加的选项\",\r\n                                        },\r\n                                        ]}\r\n                                        style = {{marginBottom: '0'}}\r\n                                    >\r\n                                        <Input  style={{ width: '60%' }} />\r\n                                    </Form.Item>\r\n                                {fields.length > 2 ? (\r\n                                    <MinusCircleOutlined\r\n                                        className=\"dynamic-delete-button\"\r\n                                        style={{ margin: '0 8px' , marginBottom: '0'}}\r\n                                        onClick={() => {\r\n                                            remove(field.name);\r\n                                        }}\r\n                                        />\r\n                                    ) : null}\r\n                                </Form.Item>\r\n                            ))}\r\n                            <Form.Item label='action'>\r\n                                <Button\r\n                                type=\"dashed\"\r\n                                onClick={() => {\r\n                                    add();\r\n                                }}\r\n                                style={{ width: '60%' }}\r\n                                >\r\n                                <PlusOutlined /> 添加 选项\r\n                                </Button>\r\n\r\n                            </Form.Item>\r\n                            </div>\r\n                        );\r\n                        }}\r\n                    </Form.List>\r\n\r\n\r\n                    <Form.Item {...layout} label='操作' style = {{marginBottom: '12px'}}>\r\n                        <Button \r\n                        type=\"primary\" \r\n                        htmlType=\"submit\">\r\n                            创建投票</Button>\r\n                        <Button htmlType=\"button\" onClick={onReset}>\r\n                            Reset\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default CreateVote","import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport _ from 'lodash'\r\nimport './common.css'\r\nimport io from 'socket.io-client';\r\nimport { useParams , useHistory}  from 'react-router-dom'\r\nimport './voteview.css'\r\nimport { createFromIconfontCN , CheckOutlined} from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport { Avatar , Modal , Progress, PageHeader, Spin, Alert} from 'antd';\r\n\r\nconst IconFont = createFromIconfontCN({\r\n  scriptUrl: '//at.alicdn.com/t/font_8d5l8fzk5b87iudi.js',\r\n});\r\n\r\nconst api = axios.create({\r\n    baseURL: '/',\r\n    withCredentials: true,\r\n})\r\n\r\n\r\n\r\n\r\n\r\n// 投票的请求和数据处理\r\nfunction useVoteup(id, setIsLoading){\r\n    const [voteup, setVoteup] = useState([]);\r\n    const [voteInfo, setVoteInfo] = useState({});\r\n    const [options, setOptions] = useState([]);\r\n    \r\n    // 获取当前投票的信息\r\n    useEffect(() => {\r\n        // 通过前端路由获取投票id\r\n        async function getVoteup(){\r\n            var request = await api.get('./vote/' + id);\r\n            var data = request.data;\r\n            setVoteup(data.voteup)\r\n            setVoteInfo(data.info)\r\n            setOptions(data.options)\r\n            // 获取投票截止时间 如果还没有截止就开启Socket IO通信\r\n            // 为什么要关? WS 在一定程度上会消耗很多的网络资源来维持连接  在非必要的情况下最好关闭\r\n            if(data.info.deadline > Date.now()){\r\n                const socket = io();\r\n                socket.emit('select room', id)\r\n                socket.on('newvote', data => {\r\n                    setVoteup(data)\r\n                })\r\n            }\r\n            //数据准备完毕\r\n            setIsLoading(false);\r\n        }\r\n        \r\n        getVoteup()\r\n    }, [id])\r\n\r\n    return [voteup, voteInfo, options, setVoteup];\r\n}\r\n\r\nfunction useHasVoted(id){\r\n    const [isLogin, setIsLogin] = useState(false);\r\n    const [myVote, setMyVote] = useState(null);\r\n    const [userInfo, setUserInfo] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        async function hasVoted(){\r\n            var request = await api.get('/hasvoted/' + id );\r\n            console.log(request);\r\n            if(request.data.code === 1){\r\n                setIsLogin(true);\r\n                setMyVote(request.data.votedata)\r\n                setUserInfo(request.data.user)\r\n            }else if(request.data.code === 0){\r\n                setIsLogin(true);\r\n                setUserInfo(request.data.user)\r\n            }else if(request.data.code === -1){\r\n                // 没有登录\r\n            }\r\n        }\r\n        hasVoted();\r\n    }, []);\r\n\r\n    return [userInfo ,isLogin, myVote]\r\n}\r\n\r\n\r\nfunction VoteView(){\r\n    const params = useParams();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const  [voteup, voteInfo, options, setVoteup] = useVoteup(params.id,setIsLoading)\r\n    let history = useHistory();\r\n    const [isShow,setIsShow] = useState(false);\r\n    // 个人投票列表\r\n    const [userInfo, isLogin, myVote] = useHasVoted(params.id);\r\n\r\n    async function Vote(optionid){\r\n        var request = await api.post('/voteup', {\r\n            optionid,\r\n            voteid: voteInfo.id,\r\n            singleSelection: voteInfo.singleSelection\r\n        })\r\n        if(request.status === 200){\r\n            if(request.data.code === -1){\r\n                info(-1);\r\n            }else if(request.data.code === 0){\r\n                info(0);\r\n            }else{\r\n                setVoteup(request.data)\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlerShowing(){\r\n        setIsShow(!isShow);\r\n    }\r\n\r\n    function optionticket(optionid){\r\n        var count =  voteup.filter(it => it.optionid === optionid).length\r\n        return count;\r\n    }\r\n\r\n    function optionticketPrecent(optionid){\r\n        var count =  voteup.filter(it => it.optionid === optionid).length\r\n        if(voteup === null || voteup.length === 0){\r\n            return 0 ;\r\n        }else{\r\n            return Math.round(count / voteup.length * 1000) /10 \r\n        }\r\n    }\r\n\r\n    function info(code) {\r\n        console.log(code)\r\n        Modal.info({\r\n          title: '温馨提示',\r\n          content: (\r\n            <div>\r\n                {code === 0 \r\n                ?(<p>您当前尚未登录</p>)\r\n                :(<p>投票已过截止日期,无法投票</p>)\r\n            }\r\n            </div>\r\n          ),\r\n          onOk() {\r\n              if(code === 0){\r\n                history.push({\r\n                    pathname: '/login'\r\n                })\r\n              }\r\n          },\r\n        });\r\n      }\r\n\r\n    return (\r\n        <div className='layout'>\r\n            {isLoading\r\n            ?(<Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"正在获取投票页面信息\"\r\n              description= \"很快你就能看到他了\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>)\r\n            :<>           \r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => {\r\n                    history.push({\r\n                        pathname: '/' \r\n                    })\r\n                }}\r\n                title=\"Vote\"\r\n            />\r\n            <div className = 'container'>\r\n                \r\n                <div className = \"clearfix voteview-header\">\r\n                    <div className = \"voteview-header-left\">\r\n                       <h2  className = \"voteview-title\">{ voteInfo.title }</h2>\r\n                       <p  className = \"voteview-selection\">{voteInfo.singleSelection === 1 ? '[单选]': '[多选]'}</p>\r\n                    </div>\r\n                    <div className = \"voteview-logo\">\r\n                        <IconFont type=\"icon-tuichu\"  style={{ fontSize: '22px', color: 'white' }}/>\r\n                    </div>\r\n                </div>\r\n                <ul>\r\n                    {\r\n                        options.map(option => {\r\n                            return (\r\n                                <li onClick= { () =>  Vote(option.id)} key = {option.id} className=\"voteitem\">\r\n                                    <div className=\"voteitem-main clearfix\">\r\n                                        <div className = \"voteitem-option\">\r\n                                            <span className=\"voteitem-option-content\">{ option.content }</span>\r\n                                            {\r\n                                                isLogin && userInfo!== null && voteup &&voteup.some(it => (it.optionid == option.id && it.userid == userInfo.id)) &&\r\n                                                <CheckOutlined style={ {color: 'blue'} }/>\r\n                                            }\r\n                                        </div>\r\n                                        <div className = \"voteitem-ticket\">\r\n                                            <span className = \"voteitem-ticket-text\">{ optionticket(option.id) }票 </span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Progress \r\n                                    percent={optionticketPrecent(option.id)}\r\n                                    strokeColor={{\r\n                                        from: '#108ee9',\r\n                                        to: '#87d068',\r\n                                      }}\r\n                                      status=\"active\" />\r\n                                    {\r\n                                        isShow && (<div className = 'voteitem-avatar'>\r\n                                            {\r\n                                                voteup.map(item => {\r\n                                                    if(item.optionid === option.id){\r\n                                                        return (\r\n                                                            <Avatar src={ item.avatar} key={item.avatar}/>\r\n                                                        )\r\n                                                    }\r\n                                                })\r\n                                            }\r\n                                        </div>)\r\n                                    }\r\n                                </li>\r\n                            )\r\n                        })\r\n                    }\r\n                </ul>\r\n                <p className='deadline'>投票截止&nbsp;&nbsp;{moment(voteInfo.deadline).format('YYYY-M-D H:m')}</p>\r\n                {\r\n                    isShow\r\n                    ?<button className='show-button' onClick = { handlerShowing }>隐藏详情</button>\r\n                    :<button className='show-button' onClick = { handlerShowing }>显示详情</button>\r\n                }\r\n                \r\n            </div>\r\n            </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VoteView","import React ,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport './main.css'\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { List, Avatar, Pagination ,Button , Row, Col, Divider , Spin, Alert} from 'antd';\r\nimport moment from 'moment';\r\nconst DemoBox = props => <p className={`height-${props.value}`}>{props.children}</p>;\r\n\r\nconst api = axios.create({\r\n    baseURL: '/',\r\n    withCredentials: true,\r\n})\r\n\r\nfunction itemRender(current, type, originalElement) {\r\n  if (type === 'prev') {\r\n    return <a>Previous</a>;\r\n  }\r\n  if (type === 'next') {\r\n    return <a>Next</a>;\r\n  }\r\n  return originalElement;\r\n}\r\n\r\n// 请求状态\r\nfunction useUserInfo(){\r\n    var [user, setUser] = useState(null);\r\n\r\n    useEffect( () => {\r\n        async function getUserInfo(){\r\n            var request = await api.get('/userinfo')\r\n            if(request.data.code === -1){\r\n                setUser(null)\r\n            }else{\r\n                setUser(request.data.data);\r\n            }\r\n        }\r\n        getUserInfo();\r\n        \r\n    }, [])\r\n    return [user, setUser] ;\r\n}\r\n\r\n// 请求投票列表\r\nfunction useVoteList(setIsLoading){\r\n    var [voteList, setVoteList] = useState([]); \r\n    var [voteNum , setVoteNum] = useState(0);\r\n\r\n    useEffect(()=> {\r\n        async function getVotelist(){\r\n            var request = await api.get('/votelist/1');\r\n            setVoteList( request.data.votelist );\r\n            setIsLoading(false)\r\n        }   \r\n        getVotelist();\r\n\r\n        async function getVotelistNum(){\r\n            var request = await api.get('votelistnum');\r\n            setVoteNum(request.data.num)\r\n        }\r\n\r\n        getVotelistNum();\r\n    }, [])\r\n    return [voteList, voteNum['count(id)'],setVoteList]\r\n}\r\n\r\nfunction Main(props){\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [user,setUser] = useUserInfo();\r\n    const [voteList, voteNum, setVoteList] = useVoteList(setIsLoading);\r\n    // 退出登录\r\n    async function logout(){\r\n        await api.get('/logout');\r\n        setUser(null);\r\n    }\r\n\r\n    async function getPageInfo(page, pageSize){\r\n        var request = await api.get('/votelist/' + page);\r\n        var data = request.data;\r\n        setVoteList(data.votelist)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            isLoading\r\n            ?(<Spin tip=\"Loading...\">\r\n            <Alert\r\n              message=\"正在获取您的登录状态\"\r\n              description= \"读取信息通常只需要几秒\"\r\n              type=\"info\"\r\n            />\r\n          </Spin>)\r\n            :(<div className = 'container'>  \r\n            <Divider orientation=\"left\">Just Vote</Divider>\r\n            <Row justify=\"space-around\" align=\"middle\">\r\n                <Col span={12}  >\r\n                    {\r\n                        user == null\r\n                        ? <Avatar shape=\"square\" size={64} icon={<UserOutlined />}  style = {{marginLeft: '25px'}}/>\r\n                        :<Avatar shape=\"square\" size={64} src={'/' +  user.avatar} style = {{marginLeft: '25px'}}/>\r\n                    }\r\n                    <DemoBox value={100} >\r\n                        <p className = 'username'>Welcome { user == null  ? '游客': user.name } </p>\r\n                    </DemoBox>\r\n                </Col>\r\n                {\r\n                    user === null || user.code === -1\r\n                    ?(<Col span={12}>\r\n                        <DemoBox value={120}>\r\n                            <Link to=\"/login\" className = 'linkbutton'>登录</Link>\r\n                            <Link to=\"/register\" className = 'linkbutton'>注册</Link>\r\n                        </DemoBox>\r\n                    </Col>)\r\n                    :(<Col span={12}>\r\n                        <DemoBox value={80}>\r\n                            <Button onClick = { logout } style = {{marginLeft: '50px'}}>退出</Button>\r\n                            <br />\r\n                            <Link to=\"/create-vote\" className = 'linkbutton'>创建投票</Link>\r\n                        </DemoBox>\r\n                    </Col>)\r\n                }\r\n            </Row>\r\n            <List\r\n                itemLayout=\"horizontal\"\r\n                dataSource={voteList}\r\n                renderItem={item => (\r\n                    <>\r\n                <List.Item >\r\n                    <List.Item.Meta\r\n                    avatar={<Avatar src= { '/' + item.avatar} />}\r\n                    title={<Link  to= { \"/vote-view/\" + item.id }>{item.title}</Link>}\r\n                    description= { item.desc} \r\n                    />\r\n                </List.Item>\r\n                <li className= 'clearfix'>\r\n                    <span className = 'itemauthor'>create by {item.name}</span>\r\n                    <span className = 'itemdeadline'>{moment(item.deadline, \"x\").fromNow()}</span>\r\n                </li>\r\n                </>\r\n                )}\r\n            />\r\n            <div className = 'pagination'>\r\n                <Pagination \r\n                total={ voteNum } \r\n                itemRender={itemRender}\r\n                defaultCurrent = { 5 }\r\n                defaultPageSize = { 5 }\r\n                showLessItems = {true}\r\n                onChange = { getPageInfo }\r\n                />\r\n            </div>\r\n        </div>)\r\n\r\n        }\r\n\r\n        </>     \r\n\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport {useState} from 'react';\r\nimport axios from 'axios';\r\nimport './common.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    PageHeader,\r\n  } from 'antd';\r\nconst api = axios.create({\r\n    baseURL: '/',\r\n    withCredentials: true,\r\n})\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n        span: 24,\r\n        },\r\n        sm: {\r\n        span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n        span: 24,\r\n        },\r\n        sm: {\r\n        span: 16,\r\n        },\r\n    },\r\n};\r\n\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n        span: 24,\r\n        offset: 0,\r\n        },\r\n        sm: {\r\n        span: 16,\r\n        offset: 8,\r\n        },\r\n    },\r\n};\r\nfunction Forgot(){\r\n    let history = useHistory();\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = values => {\r\n        async function sendForgotRequest(data){\r\n            var request = api.post('/forgot', {\r\n                email: data.email,\r\n                captcha: data.captcha,\r\n            })\r\n            console.log(request);\r\n            // if(request.data.code == -1){\r\n\r\n            // }else{\r\n\r\n            // }\r\n        }\r\n        sendForgotRequest(values);\r\n      };\r\n    const [image, setImage] = useState(Date.now())\r\n\r\n    return (\r\n        <div className = 'outside'>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => {\r\n                    history.push({\r\n                        pathname: '/login' \r\n                    })\r\n                }}\r\n                title=\"Forgot\"\r\n                subTitle=\"We will send you an email\"\r\n            />\r\n            <div className = 'container'>\r\n                <Form\r\n                    {...formItemLayout}\r\n                    form={form}\r\n                    name=\"register\"\r\n                    onFinish={onFinish}\r\n                    scrollToFirstError\r\n                    >\r\n                    <Form.Item\r\n                        name=\"email\"\r\n                        label=\"E-mail\"\r\n                        rules={[\r\n                        {\r\n                            type: 'email',\r\n                            message: 'The input is not valid E-mail!',\r\n                        },\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your E-mail!',\r\n                        },\r\n                        ]}\r\n                        style = {{marginBottom: '0'}}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item label=\"Captcha\" extra=\"We must make sure that your are a human.\">\r\n                        <Row gutter={8}>\r\n                        <Col span={8}>\r\n                            <Form.Item\r\n                            name=\"captcha\"\r\n                            noStyle\r\n                            rules={[{ required: true, message: 'Please input the captcha you got!' }]}\r\n                            >\r\n                            <Input />\r\n                            </Form.Item>\r\n                        </Col>\r\n                        <Col span={8}>\r\n                            <Button onClick = {() => setImage(Date.now())  }>Get captcha</Button>\r\n                        </Col>\r\n                        <Col span={8} style = { {marginTop: '-10px', paddingLeft: '18px'}}>\r\n                            <img src = {'/captcha?' + image } alt = '验证码显示错误' />\r\n                        </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n                    <Form.Item {...tailFormItemLayout} style = {{marginBottom: '0'}}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Send\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Forgot;\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    PageHeader,\r\n    Checkbox,\r\n  } from 'antd';\r\nconst api = axios.create({\r\n    baseURL: '/',\r\n    withCredentials: true,\r\n})\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n        span: 24,\r\n        },\r\n        sm: {\r\n        span: 8,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n        span: 24,\r\n        },\r\n        sm: {\r\n        span: 16,\r\n        },\r\n    },\r\n};\r\nconst tailFormItemLayout = {\r\n    wrapperCol: {\r\n        xs: {\r\n        span: 24,\r\n        offset: 0,\r\n        },\r\n        sm: {\r\n        span: 16,\r\n        offset: 8,\r\n        },\r\n    },\r\n};\r\nfunction ChangePassword(){\r\n    let history = useHistory();\r\n    const [form] = Form.useForm();\r\n    var params = useParams();\r\n    const onFinish = values => {\r\n        async function changeRequest(data){\r\n            var request = await api.post('/change-password/' + params.token, {\r\n                password: data.password,\r\n            })\r\n            if(request.data.code === 0){\r\n                history.push({\r\n                    pathname: '/login',\r\n                })\r\n            }else{\r\n\r\n            }\r\n        }\r\n        changeRequest(values)\r\n    };\r\n    return (\r\n        <div className = 'outside'>\r\n            <PageHeader\r\n                className=\"site-page-header\"\r\n                onBack={() => {\r\n                    history.push({\r\n                        pathname: '/login' \r\n                    })\r\n                }}\r\n                title=\"Reset Password\"\r\n            />\r\n            <div className = 'container'>\r\n                <Form\r\n                {...formItemLayout}\r\n                form={form}\r\n                name=\"register\"\r\n                onFinish={onFinish}\r\n                scrollToFirstError\r\n                >\r\n                    <Form.Item\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please input your password!',\r\n                        },]}\r\n                        hasFeedback\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"confirm\"\r\n                        label=\"Confirm Password\"\r\n                        dependencies={['password']}\r\n                        hasFeedback\r\n                        rules={[\r\n                        {\r\n                            required: true,\r\n                            message: 'Please confirm your password!',\r\n                        },\r\n                        ({ getFieldValue }) => ({\r\n                            validator(rule, value) {\r\n                            if (!value || getFieldValue('password') === value) {\r\n                                return Promise.resolve();\r\n                            }\r\n                            return Promise.reject('The two passwords that you entered do not match!');\r\n                            },\r\n                        }),\r\n                        ]}\r\n                    >\r\n                        <Input.Password />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"agreement\"\r\n                        valuePropName=\"checked\"\r\n                        rules={[\r\n                        { validator:(_, value) => value ? Promise.resolve() : Promise.reject('Should accept agreement') },\r\n                        ]}\r\n                        {...tailFormItemLayout}\r\n                    >\r\n                        <Checkbox>\r\n                        I have read the <a href=\"#\">agreement</a>\r\n                        </Checkbox>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item {...tailFormItemLayout}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ChangePassword;\r\n","import React from 'react';\nimport './App.css';\nimport LoginPage from './hooks/login'\nimport RegisterPage from './hooks/register'\nimport CreateVote from './hooks/createVote'\nimport VoteView from './hooks/voteView'\nimport Main from './hooks/main'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Forgot from './hooks/forgot';\nimport ChangePassword from './hooks/changepassword'\nimport 'antd/dist/antd.css';\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n          {/* <Link to=\"/vote-view/:id\">vote-view</Link> */}\n\n          <Switch>\n            <Route path=\"/register\" exact>\n              <RegisterPage />\n            </Route>\n            <Route path=\"/login\" exact>\n              <LoginPage />\n            </Route>\n            <Route path=\"/\" exact>\n              <Main />\n            </Route>\n            <Route path=\"/create-vote\" exact>\n              <CreateVote />\n            </Route>\n            <Route path=\"/vote-view/:id\" exact>\n              <VoteView />\n            </Route>\n            <Route path=\"/forgot\" exact>\n              <Forgot />\n            </Route>\n            <Route path=\"/change-password/:token\" exact>\n              <ChangePassword />\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}